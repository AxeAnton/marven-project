package ru.itmo.lesson;

import java.io.IOException;


// 24. Что бы создать документацию к программе ее свойства и методам используются кавычки /**  */, она состоит из трех частей:
// 1я - Комментарий, после вот таких ковычек /** (смотри пояснения ниже ну в примере это пустое поле, а вообще туда можно написать зачем программа нужна (до конца не понял важность поля, но в дальнейшем объяснении Даша совместила части 1 и 2. ХЗ почему))
// 2я - Инфо в свободной форме п. 25
// 3я - анатация (что методы возвращают, @автор @param @return, вообщем там много анатаций и для каждой в документе есть свое поля и что бы инфо попала именно туда надо их использовать @....) п. 26

/**
 * 25. Документация (начинается с ДВУХ звездочек), комментарии к методам и конструкторам. Класс создан для того то и того то, что за джинерик если есть и т.д.
 * 26. @author Anton Klimenko (анатация)
* */

public class Pojo {
// 23. Класс в котором только свойства, гетторы, сетторы и переопределен toString в java ПРИНЯТО называть Pojo, причем сам класс может называться как угодно. Для этого в 16 версии IDEA появилась record (как работает не понятно).
// 27. Например можно только дать короткий комментарий к свойству id - /** поле id уникальный идентификатор */
    private final int id;
    private String name;


    /** 28. пример аннотации для конструктора.
     * Конструктору можно добавить аннотацию, конструктор принимает на вход значение для поля {@link Pojo#id}, (имя класса # свойство) которое не мб изменено после инициализации
     * */
    public Pojo(int id) {
        this.id = id;
        this.name = name;
    }


/**  29.пример аннотации для геттора.
 * Метод, то то и тд.....описание метода...
 * @return возвращает значение уникального идентификатора и в каких случаях описываем
 * */
    public int getId() {
        return id;
    }


    public String getName() {
        return name;
    }


    /** 34. А еще метод может выбрасывать Exception, тогда добавляем аннотацию @throws
     *  @throws IOException - если id меньше 100.... -> pom.xml
     * */
    public void someVoid() throws IOException {
        if (id > 100) {
            throw new IOException();
        }
            System.out.println(id);
    }

    /** 30. пример аннотации для сеттора.
     * 31. Описание метода. Если метод, принимает несколько параметров, то у нас будет несколько АНАТАЦИЙ
     * 32. @param name значение свойства name.
     * 33. @param имя значение свойства имя. Это если нескольлко параметров в аргументе.
     * */
    public void setName(String name) {
        this.name = name;
    }

    @Override
    public String toString() {
        return "Pojo{" +
                "id=" + id +
                ", name='" + name + '\'' +
                '}';
    }
}
